name: Epitech Actions Workflow

on:
  push:
    branches:
      - main

jobs:
  can_compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y make gcc

      - name: Try if can compile or not
        run: |
          make

  style_check:
    runs-on: ubuntu-latest
    needs: can_compile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone coding style checker repository
        run: |
          git clone --depth 1 https://github.com/Epitech/coding-style-checker.git /tmp/style-checker

      - name: Run coding style checker
        run: |
          chmod +x /tmp/style-checker/coding-style.sh
          /tmp/style-checker/coding-style.sh . . > epitech-actions-output-style.txt
          errors=$(grep -o '^[0-9]\+' epitech-actions-output-style.txt | tail -n 1)
          if [ "$errors" -gt 0 ]; then
            file_content=$(tail -n 1 epitech-actions-output-style.txt)
            echo "::error::${file_content}"
            exit 1
          else
            echo "::notice::No coding style error reported. Good Job !"
          fi

      - name: Save style check report
        uses: actions/upload-artifact@v4
        with:
          name: style-check-report
          path: epitech-actions-output-style.txt

  test:
    runs-on: ubuntu-latest
    needs: style_check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for tests_run rule
        id: check_tests
        run: |
          if grep -q '^tests_run:' Makefile; then
            echo "tests_run=true" >> $GITHUB_ENV
          else
            echo "tests_run=false" >> $GITHUB_ENV
          fi

      - name: Install essential packages
        if: env.tests_run == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget tar

      - name: Cache dependencies
        if: env.tests_run == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.criterion
          key: criterion-${{ runner.os }}-${{ hashFiles('**/dependencies/install_criterion.sh') }}
          restore-keys: |
            criterion-${{ runner.os }}-

      - name: Install criterion for tests
        if: env.tests_run == 'true'
        run: |
          git clone https://github.com/matteoepitech/EpitechActions.git
          cd EpitechActions
          chmod +x ./dependencies/install_criterion.sh
          ./dependencies/install_criterion.sh

      - name: Verify and run tests
        if: env.tests_run == 'true'
        run: make tests_run
